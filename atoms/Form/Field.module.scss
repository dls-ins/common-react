@import '@styles/_globals.scss';
@import '@styles/include-media';

@include media('<tablet') {
    .atom {
        width: 100%;
    }
}

.atom {
    // My definitions by default
    display: inline-block;
    // overflow: hidden;
    width: 100%;
    // min-width: 300px;
    // margin: 0.2em;

    &.radio {
        cursor: pointer;
    }
    .label {
        padding-left: 5px;
        margin-bottom: 5px;
    }
    .label-left,
    .label-right {
        padding: get-space(5);
    }
    .field {
        width: 100%;
        border: solid 1px transparent;
        outline: none;

        @include use-theme using ($ts) {
            &#{$ts} {
                &:focus,
                &:active {
                    border-color: color-text(get-color(background));
                }
            }
        }
        // height: 100%;
        // border-radius: 0;
    }

    .field-select {
        padding: (get-space(5) - 1px) get-space(4);
        background-position: calc(100% - 0.75rem) center !important;
        -moz-appearance: none !important;
        -webkit-appearance: none !important;
        appearance: none !important;

        @include use-theme using ($ts) {
            &#{$ts} {
                $color: color-text(get-color(background));
                background: rgba(0, 0, 0, 0.05)
                    url("data:image/svg+xml,<svg height='10px' width='10px' viewBox='0 0 16 16' fill='#{$color}' xmlns='http://www.w3.org/2000/svg'><path d='M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z'/></svg>")
                    no-repeat;

                option {
                    color: $color;
                    background-color: get-color(background, 1, 1);
                }
            }
        }
    }

    // @include use-theme using ($ts){
    // 	// Theme Iterator
    // 	@include use-color using ($cn, $c){
    // 		// Color Iterator
    // 	}
    // }
}
