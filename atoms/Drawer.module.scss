@import '@styles/_globals.scss';

@keyframes left_in {
    from {
        transform: translateX(-100%);
    }
    to {
        transform: translateX(0);
    }
}
@keyframes left_out {
    from {
        transform: translateX(0);
    }
    to {
        transform: translateX(-100%);
    }
}
@keyframes right_in {
    from {
        transform: translateX(100%);
    }
    to {
        transform: translateX(0);
    }
}
@keyframes right_out {
    from {
        transform: translateX(0);
    }
    to {
        transform: translateX(100%);
    }
}

.comp {
    // My definitions by default
    text-align: center;
    position: relative;
    .back,
    .menu {
        z-index: 10;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        &.fixed {
            position: fixed;
            max-height: 100%;
        }
    }
    .menu-right {
        right: 0;
    }
    .menu-left {
        left: 0;
    }

    .hook-header {
        font-size: 1.1em;
        font-weight: bold;
    }
    .content {
        min-height: 100%;
        position: relative;
        // z-index: 0;
    }
    .menu {
        text-align: center;
        z-index: 12;
    }
    .back {
        background: rgba(#000, 0.3);
    }
    .menu {
        transform: translateX(-100%);
    }
    .menu-right {
        transform: translateX(100%);
        left: unset;
        right: 0;
    }
    .menu,
    .menu-right {
        max-width: 240px;
    }

    @include use-theme using ($ts) {
        // Theme Iterator
        $background: get-color(neutral, -3);
        &#{$ts} .menu,
        &#{$ts} .menu-right {
            @include background-color($background, 1);
        }
        @supports (backdrop-filter: blur(10px)) {
            &#{$ts} .menu,
            &#{$ts} .menu-right {
                background: get-color($background, 0, $alpha: 0.7);
                backdrop-filter: blur(10px);
            }
        }

        @include use-color using ($cn, $c) {
            // Color Iterator
        }
    }
}
